{
    "env": {
        "es2021": true,
        "jest": true
        // "node": true
        // "browser": true
    },
    "settings": {
        "jest": {
            "version": "latest"
        }
    },
    "parser": "@typescript-eslint/parser",
    "parserOptions": {
        "sourceType": "module",
        "project": "tsconfig.json"
    },
    "plugins": [
        "@typescript-eslint",
        "jest"
    ],
    "rules": {
        // POSSIBLE PROBLEMS
        "array-callback-return": [
            "error",
            {
                "allowImplicit": false,
                "checkForEach": true
            }
        ],
        "constructor-super": "error",
        "for-direction": "error",
        "getter-return": [
            "error",
            {
                "allowImplicit": false
            }
        ],
        "no-async-promise-executor": "error",
        "no-await-in-loop": "error",
        "no-compare-neg-zero": "error",
        "no-cond-assign": [
            "error",
            "always"
        ],
        "no-const-assign": "error",
        "no-constant-condition": "error",
        "no-control-regex": "error",
        "no-debugger": "error",
        "no-dupe-args": "error",
        "no-dupe-class-members": "error",
        "no-dupe-else-if": "error",
        "no-dupe-keys": "error",
        "no-duplicate-case": "error",
        "no-duplicate-imports": "off",
        // [
        //     "error",
        //     {
        //         "includeExports": true
        //     }
        // ],
        "no-empty-character-class": "error",
        "no-empty-pattern": "error",
        "no-ex-assign": "error",
        "no-fallthrough": "error",
        "no-func-assign": "error",
        "no-import-assign": "error",
        "no-inner-declarations": [
            "error",
            "functions"
        ],
        "no-invalid-regexp": "error",
        "no-irregular-whitespace": [
            "error",
            {
                "skipComments": false,
                "skipRegExps": false,
                "skipStrings": true,
                "skipTemplates": false
            }
        ],
        "no-loss-of-precision": "off", // "error,
        "no-misleading-character-class": "error",
        "no-new-symbol": "error",
        "no-obj-calls": "error",
        "no-promise-executor-return": "error",
        "no-prototype-builtins": "error",
        "no-self-assign": [
            "error",
            {
                "props": true
            }
        ],
        "no-self-compare": "error",
        "no-setter-return": "error",
        "no-sparse-arrays": "error",
        "no-template-curly-in-string": "error",
        "no-this-before-super": "error",
        "no-undef": [
            "error",
            {
                "typeof": false
            }
        ],
        "no-unexpected-multiline": "error",
        "no-unmodified-loop-condition": "error",
        "no-unreachable": "error",
        "no-unreachable-loop": "error",
        "no-unsafe-finally": "error",
        "no-unsafe-negation": "error",
        "no-unsafe-optional-chaining": "error",
        "no-unused-vars": "off", // "error",
        "no-use-before-define": "off",
        // [
        //     "error",
        //     {
        //         "functions": true,
        //         "variables": true
        //     }
        // ],
        "no-useless-backreference": "error",
        "require-atomic-updates": "error",
        "use-isnan": "error",
        "valid-typeof": "error",

        // SUGGESTIONS
        "accessor-pairs": [
            "error",
            {
                "setWithoutGet": true,
                "getWithoutSet": true
            }
        ],
        "arrow-body-style": [
            "error",
            "as-needed",
            {
                "requireReturnForObjectLiteral": false
            }
        ],
        "block-scoped-var": "error",
        "camelcase": [
            "error",
            {
                "allow": [],
                "ignoreDestructuring": false,
                "properties": "always"
            }
        ],
        "capitalized-comments": "off",
        "class-methods-use-this":
        [
            "error",
            {
                "exceptMethods": [],
                "enforceForClassFields": true
            }
        ],
        "complexity": [
            "error",
            10
        ],
        "consistent-return": "error",
        "consistent-this": "error",
        "curly": [
            "error",
            "all"
        ],
        "default-case": "error",
        "default-case-last": "error",
        "default-param-last": "off", // "error",
        "dot-notation": "off", // "error",
        "eqeqeq": [
            "error",
            "always"
        ],
        "func-name-matching": [
            "error",
            "always",
            {
                "considerPropertyDescriptor": true,
                "includeCommonJSModuleExports": true
            }
        ],
        "func-names": [
            "error",
            "always",
            {
                "generators": "always"
            }
        ],
        "func-style": [
            "error",
            "declaration",
            {
                "allowArrowFunctions": true
            }
        ],
        "grouped-accessor-pairs": [
            "error",
            "getBeforeSet"
        ],
        "guard-for-in": "error",
        "id-denylist": [
            "error",
            "id", "callback", "cb", "context", "err", "e", "handler"
        ],
        "id-length": [
            "error",
            {
                "min": 3,
                "max": 35,
                "properties": "always",
                "exceptions": [],
                "exceptionPatterns": []
            }
        ],
        "id-match": "off",
        "init-declarations": "off",
        "max-classes-per-file": [
            "error",
            {
                "max": 1,
                "ignoreExpressions": false
            }
        ],
        "max-depth": [
            "error",
            4
        ],
        "max-lines": [
            "error",
            {
                "max": 300,
                "skipBlankLines": true,
                "skipComments": true
            }
        ],
        "max-lines-per-function": [
            "error",
            {
                "IIFEs": true,
                "max": 300,
                "skipBlankLines": true,
                "skipComments": true
            }
        ],
        "max-nested-callbacks": [
            "error",
            3
        ],
        "max-params": [
            "error",
            4
        ],
        "max-statements": [
            "error",
            10
        ],
        "multiline-comment-style": [
            "error",
            "separate-lines"
        ],
        "new-cap": [
            "error",
            {
                "capIsNew": false,
                "capIsNewExceptions": [],
                "capIsNewExceptionPattern": "",
                "newIsCap": true,
                "newIsCapExceptions": [],
                "newIsCapExceptionPattern": "",
                "properties": true
            }
        ],
        "no-alert": "error",
        "no-array-constructor": "off", // "error",
        "no-bitwise": "error",
        "no-caller": "error",
        "no-case-declarations": "error",
        "no-confusing-arrow": [
            "error",
            {
                "allowParens": true,
                "onlyOneSimpleParam": false
            }
        ],
        "no-console": "error",
        "no-delete-var": "error",
        "no-div-regex": "error",
        "no-else-return": [
            "error",
            {
                "allowElseIf": false
            }
        ],
        "no-empty": "error",
        "no-empty-function": "off", // "error",
        "no-eq-null": "error",
        "no-eval": "error",
        "no-extend-native": [
            "error",
            {
                "exceptions": []
            }
        ],
        "no-extra-bind": "error",
        "no-extra-boolean-cast": "error",
        "no-extra-label": "error",
        "no-extra-semi": "off", // "error",
        "no-floating-decimal": "error",
        "no-global-assign": "error",
        "no-implicit-coercion": "error",
        "no-implicit-globals": [
            "error",
            {
                "lexicalBindings": false
            }
        ],
        "no-implied-eval": "off", // "error",
        "no-inline-comments": "off", // "error",
        "no-invalid-this": "error",
        "no-iterator": "error",
        "no-label-var": "error",
        "no-labels": "error",
        "no-lone-blocks": "error",
        "no-lonely-if": "error",
        "no-loop-func": "off", // "error",
        "no-magic-numbers": "off", // "error",
        "no-mixed-operators": "error",
        "no-multi-assign": [
            "error",
            {
                "ignoreNonDeclaration": false
            }
        ],
        "no-multi-str": "error",
        "no-negated-condition": "error",
        "no-nested-ternary": "error",
        "no-new": "error",
        "no-new-func": "error",
        "no-new-object": "error",
        "no-new-wrappers": "error",
        "no-nonoctal-decimal-escape": "error",
        "no-octal": "error",
        "no-octal-escape": "error",
        "no-param-reassign": "error",
        "no-plusplus": [
            "error",
            {
                "allowForLoopAfterthoughts": true
            }
        ],
        "no-proto": "error",
        "no-redeclare": "off",
        // [
        //     "error",
        //     {
        //         "builtinGlobals": true
        //     }
        // ],
        "no-regex-spaces": "error",
        "no-restricted-exports": "error",
        "no-restricted-globals": "error",
        "no-restricted-imports": "off", //"error",
        "no-restricted-properties": "error",
        "no-restricted-syntax": "error",
        "no-return-assign": "error",
        "no-return-await": "off", // "error",
        "no-script-url": "error",
        "no-sequences": "error",
        "no-shadow": "off",
        // [
        //     "error",
        //     {
        //         "allow": [],
        //         "builtinGlobals": true,
        //         "hoist": "all"
        //     }
        // ],
        "no-shadow-restricted-names": "error",
        "no-ternary": "off",
        "no-throw-literal": "off", // "error",
        "no-undef-init": "error",
        "no-undefined": "off",
        "no-underscore-dangle": "error",
        "no-unneeded-ternary": "error",
        "no-unused-expressions": "off",
        // [
        //     "error",
        //     {
        //         "allowShortCircuit": false,
        //         "allowTaggedTemplates": false,
        //         "allowTernary": false
        //     }
        // ],
        "no-unused-labels": "error",
        "no-useless-call": "error",
        "no-useless-catch": "error",
        "no-useless-computed-key": "error",
        "no-useless-concat": "error",
        "no-useless-constructor": "off",
        "no-useless-escape": "error",
        "no-useless-rename": [
            "error",
            {
                "ignoreDestructuring": false,
                "ignoreExport": false,
                "ignoreImport": false
            }
        ],
        "no-useless-return": "error",
        "no-var": "error",
        "no-void": [
            "error",
            {
                "allowAsStatement": false
            }
        ],
        "no-warning-comments": [
            "error",
            {
                "terms": [ "todo", "fixme" ],
                "location": "anywhere"
            }
        ],
        "no-with": "error",
        "object-shorthand": [
            "error",
            "always"
        ],
        "one-var":  [
            "error",
            "never"
        ],
        "one-var-declaration-per-line": [
            "error",
            "always"
        ],
        "operator-assignment": [
            "error",
            "always"
        ],
        "prefer-arrow-callback": [
            "error",
            {
                "allowNamedFunctions": false,
                "allowUnboundThis": false
            }
        ],
        "prefer-const": "error",
        "prefer-destructuring": "off",
        "prefer-exponentiation-operator": "error",
        "prefer-named-capture-group": "error",
        "prefer-numeric-literals": "error",
        "prefer-object-spread": "error",
        "prefer-promise-reject-errors": [
            "error",
            {
                "allowEmptyReject": false
            }
        ],
        "prefer-regex-literals": "error",
        "prefer-rest-params": "error",
        "prefer-spread": "error",
        "prefer-template": "error",
        "quote-props":  [
            "error",
            "consistent-as-needed",
            {
                "keywords": true,
                "unnecessary": false
            }
        ],
        "radix": [
            "error",
            "always"
        ],
        "require-await": "off", // "error",
        "require-unicode-regexp": "error",
        "require-yield": "error",
        "sort-imports": [
            "error",
            {
                "ignoreCase": false,
                "ignoreDeclarationSort": false,
                "ignoreMemberSort": false,
                "memberSyntaxSortOrder": [ "none", "multiple", "single", "all" ],
                "allowSeparatedGroups": true
            }
        ],
        "sort-keys": "off",
        "sort-vars": "off",
        "spaced-comment": [
            "error",
            "always"
        ],
        "strict": [
            "error",
            "never"
        ],
        "symbol-description": "error",
        "vars-on-top": "error",
        "yoda": [
            "error",
            "always"
        ],

        // LAYOUT & FORMATTING
        "array-bracket-newline": [
            "error",
            "consistent"
        ],
        "array-bracket-spacing": [
            "error",
            "always",
            {
                "arraysInArrays": true,
                "objectsInArrays": true,
                "singleValue": true
            }
        ],
        "array-element-newline": [
            "error",
            "consistent"
        ],
        "arrow-parens": [
            "error",
            "always"
        ],
        "arrow-spacing": [
            "error",
            {
                "before": true,
                "after": true
            }
        ],
        "block-spacing": "error",
        "brace-style": "off",
        // [
        //     "error",
        //     "1tbs"
        // ],
        "comma-dangle": "off",
        // [
        //     "error",
        //     "never"
        // ],
        "comma-spacing": "off",
        // [
        //     "error",
        //     {
        //         "after": true,
        //         "before": false
        //     }
        // ],
        "comma-style": [
            "error",
            "last",
            {
                "exceptions": {
                    "ArrayExpression": false,
                    "ArrayPattern": false,
                    "ArrowFunctionExpression": false,
                    "CallExpression": false,
                    "FunctionDeclaration": false,
                    "FunctionExpression": false,
                    "ImportDeclaration": false,
                    "ObjectExpression": false,
                    "ObjectPattern": false,
                    "VariableDeclaration": false,
                    "NewExpression": false
                }
            }
        ],
        "computed-property-spacing": [
            "error",
            "never"
        ],
        "dot-location": [
            "error",
            "property"
        ],
        "eol-last": [
            "error",
            "always"
        ],
        "func-call-spacing": "off",
        // [
        //     "error",
        //     "never"
        // ],
        "function-call-argument-newline": "off",
        "function-paren-newline": [
            "error",
            "consistent"
        ],
        "generator-star-spacing": [
            "error",
            {
                "before": true,
                "after": false
            }
        ],
        "implicit-arrow-linebreak": "off",
        "indent": "off",
        // [
        //     "error",
        //     4,
        //     {
        //         "ArrayExpression": 1,
        //         "CallExpression": {
        //             "arguments": 1
        //         },
        //         "flatTernaryExpressions": true,
        //         "FunctionDeclaration": {
        //             "parameters": 1,
        //             "body": 1
        //         },
        //         "FunctionExpression": {
        //             "parameters": 1,
        //             "body": 1
        //         },
        //         "ignoreComments": false,
        //         "ignoredNodes": [],
        //         "ImportDeclaration": 1,
        //         "MemberExpression": 1,
        //         "ObjectExpression": 1,
        //         "outerIIFEBody": 1,
        //         "SwitchCase": 1,
        //         "VariableDeclarator": 1
        //     }
        // ],
        "jsx-quotes": [
            "error",
            "prefer-double"
        ],
        "key-spacing": [
            "error",
            {
                "afterColon": true,
                "beforeColon": false,
                "mode": "strict"
            }
        ],
        "keyword-spacing": "off",
        // [
        //     "error",
        //     {
        //         "after": true,
        //         "before": true,
        //         "overrides": {}
        //     }
        // ],
        "line-comment-position": "off",
        // [
        //     "error",
        //     {
        //         "position": "above"
        //     }
        // ],
        "linebreak-style": [
            "error",
            "unix"
        ],
        "lines-around-comment": "off",
        "lines-between-class-members": [
            "error",
            "always",
            {
                "exceptAfterSingleLine": false
            }
        ],
        "max-len": [
            "error",
            {
                "code": 140,
                "comments": 140,
                "ignoreComments": false,
                "ignorePattern": "",
                "ignoreRegExpLiterals": false,
                "ignoreStrings": false,
                "ignoreTemplateLiterals": false,
                "ignoreTrailingComments": false,
                "ignoreUrls": false,
                "tabWidth": 4
            }
        ],
        "max-statements-per-line": [
            "error",
            {
                "max": 1
            }
        ],
        "multiline-ternary": [
            "error",
            "always-multiline"
        ],
        "new-parens": [
            "error",
            "always"
        ],
        "newline-per-chained-call": [
            "error",
            {
                "ignoreChainWithDepth": 2
            }
        ],
        "no-extra-parens": "off",
        "no-mixed-spaces-and-tabs": "error",
        "no-multi-spaces": "error",
        "no-multiple-empty-lines": "error",
        "no-tabs": "error",
        "no-trailing-spaces": [
            "error",
            {
                "ignoreComments": false,
                "skipBlankLines": false
            }
        ],
        "no-whitespace-before-property": "error",
        "object-curly-newline": "off",
        "object-curly-spacing": "off",
        // [
        //     "error",
        //     "always",
        //     {
        //         "arraysInObjects": true,
        //         "objectsInObjects": true
        //     }
        // ],
        "object-property-newline": "off",
        "operator-linebreak": [
            "error",
            "before"
        ],
        "padded-blocks": [
            "error",
            "never"
        ],
        "padding-line-between-statements": "off",
        "quotes": "off",
        // [
        //     "error",
        //     "single",
        //     {
        //         "allowTemplateLiterals": true,
        //         "avoidEscape": true
        //     }
        // ],
        "rest-spread-spacing": [
            "error",
            "never"
        ],
        "semi": "off",
        // [
        //     "error",
        //     "always",
        //     {
        //         "omitLastInOneLineBlock": false
        //     }
        // ],
        "semi-spacing": [
            "error",
            {
                "after": true,
                "before": false
            }
        ],
        "semi-style": [
            "error",
            "last"
        ],
        "space-before-blocks": "off",
        // [
        //     "error",
        //     "always"
        // ],
        "space-before-function-paren": "off",
        // [
        //     "error",
        //     {
        //         "anonymous": "always",
        //         "asyncArrow": "always",
        //         "named": "never"
        //     }
        // ],
        "space-in-parens": [
            "error",
            "never"
        ],
        "space-infix-ops": "off", // "error",
        "space-unary-ops": [
            "error",
            {
                "nonwords": false,
                "overrides": {},
                "words": true
            }
        ],

        "switch-colon-spacing": [
            "error",
            {
                "after": true,
                "before": false
            }
        ],
        "template-curly-spacing": [
            "error",
            "never"
        ],
        "template-tag-spacing": [
            "error",
            "never"
        ],
        "unicode-bom": [
            "error",
            "never"
        ],
        "wrap-iife": [
            "error",
            "inside"
        ],
        "wrap-regex": "error",
        "yield-star-spacing": [
            "error",
            "before"
        ],

        // TYPESCRIPT - SUPPORTED RULES
        "@typescript-eslint/adjacent-overload-signatures": "error",
        "@typescript-eslint/array-type": [
            "error",
            {
                "default": "array",
                "readonly": "array"
            }
        ],
        "@typescript-eslint/await-thenable": "error",
        "@typescript-eslint/ban-ts-comment": "error",
        "@typescript-eslint/ban-tslint-comment": "error",
        "@typescript-eslint/ban-types": [
            "error",
            {
                "types": {
                }
            }
        ],
        "@typescript-eslint/class-literal-property-style": [
            "error",
            "fields"
        ],
        "@typescript-eslint/consistent-indexed-object-style": [
            "error",
            "index-signature"
        ],
        "@typescript-eslint/consistent-type-assertions": [
            "error",
            {
                "assertionStyle": "as",
                "objectLiteralTypeAssertions": "never"
            }
        ],
        "@typescript-eslint/consistent-type-definitions": [
            "error",
            "interface"
        ],
        "@typescript-eslint/consistent-type-exports": "error",
        "@typescript-eslint/consistent-type-imports": [
            "error",
            {
                "prefer": "type-imports",
                "disallowTypeAnnotations": true
            }
        ],
        "@typescript-eslint/explicit-function-return-type": [
            "error",
            {
                "allowExpressions": false,
                "allowTypedFunctionExpressions": false,
                "allowHigherOrderFunctions": false,
                "allowDirectConstAssertionInArrowFunctions": false,
                "allowConciseArrowFunctionExpressionsStartingWithVoid": false
            }
        ],
        "@typescript-eslint/explicit-member-accessibility": [
            "error",
            {
                "accessibility": "explicit",
                "overrides": {
                }
            }
        ],
        "@typescript-eslint/explicit-module-boundary-types": [
            "error",
            {
                "allowArgumentsExplicitlyTypedAsAny": false,
                "allowDirectConstAssertionInArrowFunctions": false,
                "allowedNames": [],
                "allowHigherOrderFunctions": false,
                "allowTypedFunctionExpressions": false
            }
        ],
        "@typescript-eslint/member-delimiter-style": [
            "error",
            {
                "multiline": {
                    "delimiter": "semi",
                    "requireLast": true
                },
                "singleline": {
                    "delimiter": "semi",
                    "requireLast": false
                },
                "multilineDetection": "brackets"
            }
        ],
        "@typescript-eslint/member-ordering": [
            "error",
            {
                "default": [
                    // Index signature
                    "signature",

                    // Fields
                    "public-static-field",
                    "public-decorated-field",
                    "public-instance-field",
                    "public-abstract-field",
                    "public-field",

                    "protected-static-field",
                    "protected-decorated-field",
                    "protected-instance-field",
                    "protected-abstract-field",
                    "protected-field",

                    "private-static-field",
                    "private-decorated-field",
                    "private-instance-field",
                    "private-abstract-field",
                    "private-field",

                    "static-field",
                    "instance-field",
                    "abstract-field",
                    "decorated-field",
                    "field",

                    // Constructors
                    "public-constructor",
                    "protected-constructor",
                    "private-constructor",
                    "constructor",

                    // Methods
                    "public-static-method",
                    "public-decorated-method",
                    "public-instance-method",
                    "public-abstract-method",
                    "public-method",

                    "protected-static-method",
                    "protected-decorated-method",
                    "protected-instance-method",
                    "protected-abstract-method",
                    "protected-method",

                    "private-static-method",
                    "private-decorated-method",
                    "private-instance-method",
                    "private-abstract-method",
                    "private-method",

                    "static-method",
                    "instance-method",
                    "abstract-method",
                    "decorated-method",
                    "method"
                  ]
            }
        ],
        "@typescript-eslint/method-signature-style": [
            "error",
            "property"
        ],
        "@typescript-eslint/naming-convention": [
            "error",
            {
                "selector": [
                    "variableLike",
                    "memberLike",
                    "property",
                    "method"
                ],
                "format": [ "strictCamelCase" ],
                "leadingUnderscore": "forbid",
                "trailingUnderscore": "forbid"
            },
            {
                "selector": [
                    "typeLike",
                    "enumMember"
                ],
                "format": [ "StrictPascalCase" ],
                "leadingUnderscore": "forbid",
                "trailingUnderscore": "forbid"
            },
            {
                "selector": [
                    "variable"
                ],
                "format": [ "strictCamelCase", "StrictPascalCase" ],
                "leadingUnderscore": "forbid",
                "trailingUnderscore": "forbid"
            }
        ],
        "@typescript-eslint/no-base-to-string": "error",
        "@typescript-eslint/no-confusing-non-null-assertion": "error",
        "@typescript-eslint/no-confusing-void-expression": "error",
        "@typescript-eslint/no-dynamic-delete": "error",
        "@typescript-eslint/no-empty-interface": [
            "error",
            {
                "allowSingleExtends": false
            }
        ],
        "@typescript-eslint/no-explicit-any": [
            "error",
            {
                "ignoreRestArgs": false
            }
        ],
        "@typescript-eslint/no-extra-non-null-assertion": "error",
        "@typescript-eslint/no-extraneous-class": [
            "error",
            {
                "allowConstructorOnly": false,
                "allowEmpty": false,
                "allowStaticOnly": false,
                "allowWithDecorator": false
            }
        ],
        "@typescript-eslint/no-floating-promises": [
            "error",
            {
                "ignoreVoid": false,
                "ignoreIIFE": false
            }
        ],
        "@typescript-eslint/no-for-in-array": "error",
        "@typescript-eslint/no-implicit-any-catch": [
            "error",
            {
                "allowExplicitAny": false
            }
        ],
        "@typescript-eslint/no-inferrable-types": "off",
        // [
        //     "error",
        //     {
        //         "ignoreParameters": false,
        //         "ignoreProperties": false
        //     }
        // ],
        "@typescript-eslint/no-invalid-void-type": [
            "error",
            {
                "allowInGenericTypeArguments": true,
                "allowAsThisParameter": false
            }
        ],
        "@typescript-eslint/no-meaningless-void-operator": "error",
        "@typescript-eslint/no-misused-new": "error",
        "@typescript-eslint/no-misused-promises": [
            "error",
            {
                "checksVoidReturn": true,
                "checksConditionals": true
            }
        ],
        "@typescript-eslint/no-namespace": [
            "error",
            {
                "allowDeclarations": false,
                "allowDefinitionFiles": false
            }
        ],
        "@typescript-eslint/no-non-null-asserted-nullish-coalescing": "error",
        "@typescript-eslint/no-non-null-asserted-optional-chain": "error",
        "@typescript-eslint/no-non-null-assertion": "error",
        "@typescript-eslint/no-parameter-properties": [
            "error",
            {
                "allows": [
                    "readonly",
                    "private",
                    "protected",
                    "public",
                    "private readonly",
                    "protected readonly",
                    "public readonly"
                ]
            }
        ],
        "@typescript-eslint/no-redundant-type-constituents": "error",
        "@typescript-eslint/no-require-imports": "error",
        "@typescript-eslint/no-this-alias": [
            "error",
            {
                "allowDestructuring": false,
                "allowedNames": []
            }
        ],
        "@typescript-eslint/no-type-alias": [
            "error",
            {
                "allowAliases": "always",
                "allowCallbacks": "always",
                "allowConditionalTypes": "never",
                "allowConstructors": "never",
                "allowLiterals": "never",
                "allowMappedTypes": "never",
                "allowTupleTypes": "never",
                "allowGenerics": "always"
            }
        ],
        "@typescript-eslint/no-unnecessary-boolean-literal-compare": [
            "error",
            {
                "allowComparingNullableBooleansToTrue": false,
                "allowComparingNullableBooleansToFalse": false
            }
        ],
        "@typescript-eslint/no-unnecessary-condition": [
            "error",
            {
                "allowConstantLoopConditions": false,
                "allowRuleToRunWithoutStrictNullChecksIKnowWhatIAmDoing": false
            }
        ],
        "@typescript-eslint/no-unnecessary-qualifier": "error",
        "@typescript-eslint/no-unnecessary-type-arguments": "off",
        "@typescript-eslint/no-unnecessary-type-assertion": [
            "error",
            {
                "typesToIgnore": []
            }
        ],
        "@typescript-eslint/no-unnecessary-type-constraint": "error",
        "@typescript-eslint/no-unsafe-argument": "error",
        "@typescript-eslint/no-unsafe-assignment": "error",
        "@typescript-eslint/no-unsafe-call": "error",
        "@typescript-eslint/no-unsafe-member-access": "error",
        "@typescript-eslint/no-unsafe-return": "error",
        "@typescript-eslint/no-useless-empty-export": "error",
        "@typescript-eslint/no-var-requires": "error",
        "@typescript-eslint/non-nullable-type-assertion-style": "error",
        "@typescript-eslint/prefer-as-const": "error",
        "@typescript-eslint/prefer-enum-initializers": "off",
        "@typescript-eslint/prefer-for-of": "error",
        "@typescript-eslint/prefer-function-type": "error",
        "@typescript-eslint/prefer-includes": "error",
        "@typescript-eslint/prefer-literal-enum-member": [
            "error",
            {
                "allowBitwiseExpressions": false
            }
        ],
        "@typescript-eslint/prefer-namespace-keyword": "error",
        "@typescript-eslint/prefer-nullish-coalescing": [
            "error",
            {
                "ignoreConditionalTests": false,
                "ignoreMixedLogicalExpressions": false
            }
        ],
        "@typescript-eslint/prefer-optional-chain": "error",
        "@typescript-eslint/prefer-readonly": [
            "error",
            {
                "onlyInlineLambdas": false
            }
        ],
        "@typescript-eslint/prefer-readonly-parameter-types": "off",
        // [
        //     "error",
        //     {
        //         "checkParameterProperties": false,
        //         "ignoreInferredTypes": false
        //     }
        // ],
        "@typescript-eslint/prefer-reduce-type-parameter": "error",
        "@typescript-eslint/prefer-regexp-exec": "error",
        "@typescript-eslint/prefer-return-this-type": "off",
        "@typescript-eslint/prefer-string-starts-ends-with": "error",
        "@typescript-eslint/prefer-ts-expect-error": "error",
        "@typescript-eslint/promise-function-async": [
            "error",
            {
                "allowAny": false,
                "allowedPromiseNames": [],
                "checkArrowFunctions": true,
                "checkFunctionDeclarations": true,
                "checkFunctionExpressions": true,
                "checkMethodDeclarations": true
            }
        ],
        "@typescript-eslint/require-array-sort-compare": [
            "error",
            {
                "ignoreStringArrays": false
            }
        ],
        "@typescript-eslint/restrict-plus-operands": [
            "error",
            {
                "checkCompoundAssignments": true
            }
        ],
        "@typescript-eslint/restrict-template-expressions": [
            "error",
            {
                "allowNumber": true,
                "allowBoolean": true,
                "allowAny": false,
                "allowNullish": false
            }
        ],
        "@typescript-eslint/sort-type-union-intersection-members": [
            "error",
            {
                "checkIntersections": true,
                "checkUnions": true,
                "groupOrder": [
                    "named",
                    "keyword",
                    "operator",
                    "literal",
                    "function",
                    "import",
                    "conditional",
                    "object",
                    "tuple",
                    "intersection",
                    "union",
                    "nullish"
                  ]
            }
        ],
        "@typescript-eslint/strict-boolean-expressions": [
            "error",
            {
                "allowString": true,
                "allowNumber": true,
                "allowNullableObject": true,
                "allowNullableBoolean": false,
                "allowNullableString": false,
                "allowNullableNumber": false,
                "allowAny": false,
                "allowRuleToRunWithoutStrictNullChecksIKnowWhatIAmDoing": false
            }
        ],
        "@typescript-eslint/switch-exhaustiveness-check": "error",
        "@typescript-eslint/triple-slash-reference": "error",
        "@typescript-eslint/type-annotation-spacing": [
            "error",
            {
                "before": false,
                "after": true,
                "overrides": {
                    "arrow": {
                        "before": true,
                        "after": true
                    }
                }
            }
        ],
        "@typescript-eslint/typedef": [
            "error",
            {
                "arrayDestructuring": true,
                "arrowParameter": true,
                "memberVariableDeclaration": true,
                "objectDestructuring": true,
                "parameter": true,
                "propertyDeclaration": true,
                "variableDeclaration": true,
                "variableDeclarationIgnoreFunction": true
            }
        ],
        "@typescript-eslint/unbound-method":  [
            "error",
            {
                "ignoreStatic": false
            }
        ],
        "@typescript-eslint/unified-signatures": [
            "error",
            {
                "ignoreDifferentlyNamedParameters": false
            }
        ],
        // TYPESCRIPT - EXTENSION RULES
        "@typescript-eslint/brace-style": [ // "brace-style": "off"
            "error",
            "1tbs"
        ],
        "@typescript-eslint/comma-dangle": [ // "comma-dangle": "off"
            "error",
            "never"
        ],
        "@typescript-eslint/comma-spacing": [ // "comma-spacing": "off"
            "error",
            {
                "after": true,
                "before": false
            }
        ],
        "@typescript-eslint/default-param-last": "error", // "default-param-last": "off"
        "@typescript-eslint/dot-notation": [ //"dot-notation": "off"
            "error",
            {
                "allowKeywords": false,
                "allowPattern": "",
                "allowPrivateClassPropertyAccess": false,
                "allowProtectedClassPropertyAccess": false,
                "allowIndexSignaturePropertyAccess": false
            }
        ],
        "@typescript-eslint/func-call-spacing": [ // "func-call-spacing": "off"
            "error",
            "never"
        ],
        "@typescript-eslint/indent": [ // "indent": "off"
            "error",
            4,
            {
                "ArrayExpression": 1,
                "CallExpression": {
                    "arguments": 1
                },
                "flatTernaryExpressions": true,
                "FunctionDeclaration": {
                    "parameters": 1,
                    "body": 1
                },
                "FunctionExpression": {
                    "parameters": 1,
                    "body": 1
                },
                "ignoreComments": false,
                "ignoredNodes": [],
                "ImportDeclaration": 1,
                "MemberExpression": 1,
                "ObjectExpression": 1,
                "outerIIFEBody": 1,
                "SwitchCase": 1,
                "VariableDeclarator": 1
            }
        ],
        "@typescript-eslint/init-declarations": "off",
        "@typescript-eslint/keyword-spacing": [ // "keyword-spacing": "off"
            "error",
            {
                "after": true,
                "before": true,
                "overrides": {}
            }
        ],
        "@typescript-eslint/lines-between-class-members": [ // "lines-between-class-members": "off"
            "error",
            {
                "exceptAfterOverload": true
            }
        ],
        "@typescript-eslint/no-array-constructor": "error", // "no-array-constructor": "off"
        "@typescript-eslint/no-dupe-class-members": "error", // "no-dupe-class-members": "off"
        "@typescript-eslint/no-duplicate-imports": [ // "no-duplicate-imports": "off"
            "error",
            {
                "includeExports": true
            }
        ],
        "@typescript-eslint/no-empty-function": [ // "no-empty-function": "off"
            "error",
            {
                "allow": []
            }
        ],
        "@typescript-eslint/no-extra-parens": "off", // "no-extra-parens": "off"
        // [
        //     "error",
        //     "all",
        //     {
        //         "conditionalAssign": false,
        //         "returnAssign": false,
        //         "nestedBinaryExpressions": false,
        //         "ignoreJSX": "none",
        //         "enforceForArrowConditionals": false,
        //         "enforceForSequenceExpressions": false,
        //         "enforceForNewInMemberExpressions": false,
        //         "enforceForFunctionPrototypeMethods": false
        //     }
        // ],
        "@typescript-eslint/no-extra-semi": "error", // "no-extra-semi": "off"
        "@typescript-eslint/no-implied-eval": "error", // "no-implied-eval": "off"
        "@typescript-eslint/no-invalid-this": [ // "no-invalid-this": "off"
            "error",
            {
                "capIsConstructor": false
            }
        ],
        "@typescript-eslint/no-loop-func": "error", // "no-loop-func": "off"
        "@typescript-eslint/no-loss-of-precision":  "error", // "no-loss-of-precision": "off"
        "@typescript-eslint/no-magic-numbers": [ // "no-magic-numbers": "off"
            "error",
            {
                "detectObjects": true,
                "enforceConst": true,
                "ignoreDefaultValues": false,
                "ignoreEnums": true,
                "ignoreNumericLiteralTypes": false,
                "ignoreReadonlyClassProperties": true
            }
        ],
        "@typescript-eslint/no-redeclare": [ // "no-redeclare": "off"
            "error",
            {
                "builtinGlobals": true,
                "ignoreDeclarationMerge": false

            }
        ],
        "@typescript-eslint/no-restricted-imports": "error",
        "@typescript-eslint/no-shadow": [ // "no-shadow": "off"
            "error",
            {
                "allow": [],
                "builtinGlobals": false,
                "hoist": "all",
                "ignoreTypeValueShadow": false,
                "ignoreFunctionTypeParameterNameValueShadow": false
            }
        ],
        "@typescript-eslint/no-throw-literal": "error", // "no-throw-literal": "off"
        "@typescript-eslint/no-unused-expressions": [ // "no-unused-expressions": "off"
            "error",
            {
                "allowShortCircuit": false,
                "allowTaggedTemplates": false,
                "allowTernary": false
            }
        ],
        "@typescript-eslint/no-unused-vars": "error", // "no-unused-vars": "off"
        "@typescript-eslint/no-use-before-define": [ // "no-use-before-define": "off"
            "error",
            {
                "functions": true,
                "variables": true,
                "enums": true,
                "typedefs": true,
                "ignoreTypeReferences": true
            }
        ],
        "@typescript-eslint/no-useless-constructor": "error", // "no-useless-constructor": "off"
        "@typescript-eslint/object-curly-spacing": [ // "object-curly-spacing": "off"
            "error",
            "always",
            {
                "arraysInObjects": true,
                "objectsInObjects": true
            }
        ],
        "@typescript-eslint/padding-line-between-statements": "off",
        "@typescript-eslint/quotes": [ // "quotes": "off"
            "error",
            "single",
            {
                "allowTemplateLiterals": true,
                "avoidEscape": true
            }
        ],
        "@typescript-eslint/require-await": "error", // "require-await": "off"
        "@typescript-eslint/return-await": "error", // "return-await": "off"
        "@typescript-eslint/semi": [ // "semi": "off"
            "error",
            "always",
            {
                "omitLastInOneLineBlock": false
            }
        ],
        "@typescript-eslint/space-before-blocks": "error",
        "@typescript-eslint/space-before-function-paren": [ // "space-before-function-paren": "off"
            "error",
            {
                "anonymous": "always",
                "asyncArrow": "always",
                "named": "never"
            }
        ],
        "@typescript-eslint/space-infix-ops": "error" // "space-infix-ops": "off"
    }
}
